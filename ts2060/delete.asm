DEL_SK:	RST	$18		; TODO: ???
	CP	"("
	JR	NZ,DEL_SW
	RST	$20
	CP	")"
	EX	AF,AF'
	RST	$20
	EX	AF,AF'
	JR	Z,DEL_SW
	JP	ERROR_C

DEL_E:	LD	HL,(VARS)
	JR	DEL_NE

DELETE:	RST	$30
	DEFW	L2C8D		; ALPHA
	JR	NC,DEL_PR
DEL_NX:	RST	$30
	DEFW	L28B2		; LOOK-VARS
	JR	C,DEL_SK	; return, if not found
	RL	C
	JR	C,DEL_SK	; return, if checking syntax
	SBC	HL,SP
	JR	NC,DEL_LC	; DELETE local
	ADD	HL,SP
	PUSH	HL
	RST	$18
	CP	"("
	POP	HL
	JR	Z,DEL_AR	; DELETE array
	BIT	6,C
	JR	Z,DEL_ST	; DELETE string
	LD	BC,$0006	; DELETE numeric
	BIT	7,(HL)
	JR	Z,DEL_N1	; DELETE single letter numeric
DEL_NL:	INC	BC
	DEC	HL
	BIT	7,(HL)
	JR	Z,DEL_NL
DEL_N1:	RST	$30
	DEFW	L19E8		; RECLAIM-2
DEL_SW:	RST	$18
	CP	","
	JP	NZ,SWAP1
	RST	$20
	JR	DEL_NX

DEL_AR:	PUSH	HL
	RST	$20		; skip ")"
	RST	$20
	POP	HL
DEL_ST:	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	DEC	HL
	DEC	HL
	INC	BC
	INC	BC
	INC	BC
	JR	DEL_N1

DEL_PR:	CALL	CLASS2_0A
	CALL	CHECK_END
DEL_DO:	RST	$30
	DEFW	L2DA2		; FP-TO-BC
	JR	NZ,DEL_E
	JR	C,DEL_E
	LD	L,C
	LD	H,B
	RST	$30
	DEFW	L196E		; LINE-ADDR
	JR	NZ,DEL_NE
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	SCF			; faster than INC HL
	ADC	HL,DE		; skip last line
DEL_NE:	PUSH	HL
	RST	$30
	DEFW	L1E99		; FIND-INT2
	LD	L,C
	LD	H,B
	RST	$30
	DEFW	L196E		; LINE-ADDR
	EX	DE,HL
	POP	HL
	RST	$30
	DEFW	L19DD		; DIFFER
	RET	C
	RST	$30
	DEFW	L19E8		; RECLAIM-2
	LD	HL,(PPC)
	LD	A,(SUBPPC)
	LD	(NEWPPC),HL
	INC	A
	LD	(NSPPC),A
	CALL	RSTLBLS
	RST	$10

DEL_LC:	LD	A,$BF
	CP	C
	DEC	HL
	JR	NC,DEL_LH
	INC	HL
	INC	HL
DEL_LH:	PUSH	HL		; save stack length
	ADD	HL,SP		; add one more for simple numeric
	LD	A,(HL)
	AND	$60
	CP	$60
	LD	E,L
	LD	D,H
	JR	Z,DEL_LF
	INC	HL
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
DEL_LF0:ADD	HL,BC
	EX	DE,HL
	POP	BC
	DEC	HL
	DEC	BC
	DEC	BC
	LDDR
	INC	DE
	EX	DE,HL
	LD	SP,HL
	INC	HL
	INC	HL
	LD	(ERR_SP),HL
	RST	$18
	CP	"("
	JR	NZ,DEL_SW2
	RST	$20
	RST	$20
DEL_SW2:JP	DEL_SW

DEL_LF:	LD	BC,$0017
	LD	A,(HL)
	CP	$E0
	JR	NC,DEL_LF0
	LD	C,$06
	JR	DEL_LF0
