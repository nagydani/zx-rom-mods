	INCLUDE	"../labels.asm"
	org	64640

ELLIP:	LD	HL,$000C
	ADD	HL,SP
	LD	SP,HL
	POP	BC
	LD	HL,$202F
	AND	A
	SBC	HL,BC
	JP	NZ,L1C8A

	RST	$20
	CALL	L1C7A		; read coordinate pair
	CALL	RESTK2
	RST	$20
	CALL	L1C7A		; read semiaxes
	CALL	RESTK2

	RST	$28		; calculate
	DEFB	$C1		; store ry
	DEFB	$02		; delete
	DEFB	$C0		; store rx
	DEFB	$02		; delete
	DEFB	$01		; exchange
	DEFB	$C2		; store cx
	DEFB	$E0		; get rx
	DEFB	$0F		; add cx + rx
	DEFB	$01		; exchange
	DEFB	$C3		; store cy
	DEFB	$38		; end
	CALL	L2307		; STK-TO-BC
	CALL	L22E5		; PLOT-SUB
	LD	A,(COORDS)
	CALL	L2D28		; STACK-A x
	LD	A,(COORDS+1)
	CALL	L2D28		; STACK-A y
	RST	$28
	DEFB	$E3		; get cy
	DEFB	$03		; sub y - cy
	DEFB	$31		; dup
	DEFB	$31		; dup
	DEFB	$04		; mul SQ(y-cy)
	DEFB	$E1		; get ry
	DEFB	$31		; dup
	DEFB	$04		; mul SQ ry
	DEFB	$C1		; store rry
	DEFB	$05		; div
	DEFB	$C5		; store yy
	DEFB	$02		; delete
	DEFB	$34,$32,$00	; stk 2 (float)
	DEFB	$E1		; get rry
	DEFB	$05		; div
	DEFB	$C3		; store ddy
	DEFB	$04		; mul
	DEFB	$C1		; store dy
	DEFB	$02		; delete
	DEFB	$E2		; get cx
	DEFB	$03		; sub x - cx
	DEFB	$31		; dup
	DEFB	$31		; dup
	DEFB	$04		; mul SQ(x-cx)
	DEFB	$E0		; get rx
	DEFB	$31		; dup
	DEFB	$04		; mul SQ rx
	DEFB	$C0		; store rrx
	DEFB	$05		; div
	DEFB	$E5		; get yy
	DEFB	$0F		; add xx + yy
	DEFB	$C4		; store rr
	DEFB	$02		; delete
	DEFB	$34,$32,$00	; stk 2 (float)
	DEFB	$E0		; get rrx
	DEFB	$05		; div
	DEFB	$C2		; store ddx
	DEFB	$04		; mul
	DEFB	$C0		; store dx
	DEFB	$02		; delete
	DEFB	$38		; end

DX:	EQU	MEMBOT
DY:	EQU	DX + 5
DDX:	EQU	DY + 5
DDY:	EQU	DDX + 5
RR:	EQU	DDY + 5
ELDIR:	EQU	RR + 5

	LD	B,5
	LD	HL,MEMBOT
ELL0:	PUSH	BC
	CALL	L2F9B		; PREP-ADD
	EX	AF,AF'		; save exponent
	LD	A,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	PUSH	HL
	PUSH	BC
	EXX
	POP	DE
	LD	L,A
	EXX
	EX	AF,AF'
	LD	B,A		; restore exponent
	LD	A,$81
	SUB	B		; no overflow possible here?
	CALL	L2FDD		; SHIFT-FP
	EXX
	PUSH	DE
	LD	A,L
	EXX
	POP	BC
	; store in little-endian order
	LD	(HL),A
	DEC	HL
	LD	(HL),B
	DEC	HL
	LD	(HL),C
	DEC	HL
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	POP	HL
	INC	HL
	POP	BC
	DJNZ	ELL0

	LD	(IY + ELDIR - ERR_NR),$00
	CALL	SDX2

ELL1C:	LD	A,(ELDIR)
	LD	HL,ELCMP
	CALL	ELIND
	JR	C,ELL2
	LD	A,(ELDIR)
	CALL	ELSTEP
	LD	A,(RR+3)
	ADD	A,A
	JR	NC,ELL1P
	LD	A,(ELDIR)
	INC	A
	AND	$03
	CALL	ELSTEP
	BIT	0,(IY + ELDIR - ERR_NR)
	CALL	ELADJ2
ELL1P:	CALL	DO_PLOT
	JR	ELL1C

ELL3:	LD	A,(ELDIR)
	INC	A
	AND	$03
	LD	(ELDIR),A
	PUSH	AF
	SCF
	CALL	ELSTEP
	CALL	DO_PLOT

	POP	AF
	PUSH	AF
	LD	HL,ELADT2
	CALL	ELIND
	POP	AF
	JR	NZ,ELL1C
	RET

ELL2:	LD	A,(ELDIR)
	PUSH	AF
	CALL	ELADJ
	POP	AF
	INC	A
	AND	$03
	CALL	ELADJ

ELL2C:	LD	HL,ELDIR
	LD	A,(HL)
	RRCA
	LD	A,(DX+3)
	JR	NC,EL3C
	LD	A,(DY+3)
EL3C:	ADD	A,A
	SBC	A,A
	XOR	(HL)
	AND	$02
	JR	NZ,ELL3
	LD	A,(HL)
	INC	A
	AND	$03
	CALL	ELSTEP
	LD	A,(RR+3)
	ADD	A,A
	JR	C,ELL2P
	LD	A,(ELDIR)
	PUSH	AF
	CALL	ELSTEP
	POP	AF
	CPL
	AND	$01
	CALL	ELADJ2
ELL2P:	CALL	DO_PLOT
	JR	ELL2C

ELADJ:	LD	HL,ELADJT
	JR	ELIND

ELADJ2:	LD	HL,ADDX2
	JR	Z,ELL1A
	LD	HL,ADDY2
ELL1A:	JP	(HL)

ELSTEP:	LD	HL,PXSTS
ELIND:	LD	C,A
	LD	B,0
	EX	AF,AF'
	ADD	HL,BC
	LD	C,(HL)
	ADD	HL,BC
	EX	AF,AF'
	JP	(HL)

PXSTS:	DEFB	INCY - $
	DEFB	DECX - $
	DEFB	DECY - $
	DEFB	INCX - $

INCX:	INC	(IY+COORDS-ERR_NR)
	RET	C
	LD	BC,(DX+2)
	LD	DE,(DX)
	CALL	ADD2RR
	LD	HL,(DDX)
	ADD	HL,DE
	LD	(DX),HL
	LD	HL,(DDX+2)
	ADC	HL,BC
	LD	(DX+2),HL
	RET

INCY:	INC	(IY+COORDS+1-ERR_NR)
	RET	C
	LD	BC,(DY+2)
	LD	DE,(DY)
	CALL	ADD2RR
	LD	HL,(DDY)
	ADD	HL,DE
	LD	(DY),HL
	LD	HL,(DDY+2)
	ADC	HL,BC
	LD	(DY+2),HL
	RET

DECX:	DEC	(IY+COORDS-ERR_NR)
	RET	C
	LD	BC,(DDX+2)
	LD	DE,(DDX)
	LD	HL,(DX)
	AND	A
	SBC	HL,DE
	LD	(DX),HL
	EX	DE,HL
	LD	HL,(DX+2)
	SBC	HL,BC
	LD	(DX+2),HL
	LD	B,H
	LD	C,L
	JR	SUB2RR

DECY:	DEC	(IY+COORDS+1-ERR_NR)
	RET	C
	LD	BC,(DDY+2)
	LD	DE,(DDY)
	LD	HL,(DY)
	AND	A
	SBC	HL,DE
	LD	(DY),HL
	EX	DE,HL
	LD	HL,(DY+2)
	SBC	HL,BC
	LD	(DY+2),HL
	LD	B,H
	LD	C,L
	JR	SUB2RR

ELADT2:	DEFB	SDX - $
	DEFB	SDY - $
	DEFB	ADX - $
	DEFB	ADY - $

SDY:	LD	BC,(DY+2)
	LD	DE,(DY)
	JR	SUB2RR
SDX:	LD	BC,(DX+2)
	LD	DE,(DX)
	JR	SUB2RR

ELADJT:	DEFB	ADX2 - $
	DEFB	ADY2 - $
	DEFB	SDX2 - $
	DEFB	SDY2 - $

SDY2:	LD	BC,(DY+2)
	LD	DE,(DY)
	JR	SUB2
SDX2:	LD	BC,(DX+2)
	LD	DE,(DX)
SUB2:	SRA	B
	RR	C
	RR	D
	RR	E
SUB2RR:	AND	A
	LD	HL,(RR)
	SBC	HL,DE
	LD	(RR),HL
	LD	HL,(RR+2)
	SBC	HL,BC
	LD	(RR+2),HL
	RET

ADY:	LD	BC,(DY+2)
	LD	DE,(DY)
	JR	ADD2RR
ADX:	LD	BC,(DX+2)
	LD	DE,(DX)
	JR	ADD2RR
ADDY2:	LD	BC,(DDY+2)
	LD	DE,(DDY)
	JR	ADD2
ADY2:	LD	BC,(DY+2)
	LD	DE,(DY)
	JR	ADD2
ADDX2:	LD	BC,(DDX+2)
	LD	DE,(DDX)
	JR	ADD2
ADX2:	LD	BC,(DX+2)
	LD	DE,(DX)
ADD2:	SRA	B
	RR	C
	RR	D
	RR	E
ADD2RR:	LD	HL,(RR)
	ADD	HL,DE
	LD	(RR),HL
	LD	HL,(RR+2)
	ADC	HL,BC
	LD	(RR+2),HL
	RET

ELCMP:	DEFB	DXGDY - $
	DEFB	MDXGDY - $
	DEFB	DXLDY - $
	DEFB	MDXLDY - $

DXGDY:	LD	DE,DX+3
	LD	HL,DY+3
	LD	B,4
ELLC:	LD	A,(DE)
	CP	(HL)
	RET	NZ
	DEC	HL
	DEC	DE
	DJNZ	ELLC
	RET

MDXGDY:	CALL	MDXLDY
	CCF
	RET

DXLDY:	CALL	DXGDY
	CCF
	RET

MDXLDY:	LD	DE,DX+3
	LD	HL,DY+3
	LD	B,4
ELLMC:	LD	A,(DE)
	CPL
	CP	(HL)
	RET	NZ
	DEC	HL
	DEC	DE
	DJNZ	ELLMC
	RET

RESTK2:	RST	$28
	DEFB	$38
	LD	BC,-5
	LD	D,H
	LD	E,L
	ADD	HL,BC
	JP	L3293		; RE-ST-TWO

DO_PLOT:	LD	BC,(COORDS)
	JP	L22E5 + 4	; PLOT-SUB
